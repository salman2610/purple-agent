import { FC, FunctionComponent } from 'react';
import { P as PrimaryProps } from './type-tOFxIAIx.js';

declare const FourColorsSchemeNames: {
    sunset: string;
    ocean: string;
    forest: string;
    twilight: string;
    dawn: string;
    dusk: string;
    midday: string;
    midnight: string;
    sunrise: string;
    rainbow: string;
};

interface HairballCustomColor {
    fillColor1: string;
    fillColor2: string;
    fillColor3: string;
    fillColor4: string;
}
declare const HairballPresetColors: {
    [FourColorsSchemeNames.sunset]: {
        fillColor1: string;
        fillColor2: string;
        fillColor3: string;
        fillColor4: string;
    };
    [FourColorsSchemeNames.ocean]: {
        fillColor1: string;
        fillColor2: string;
        fillColor3: string;
        fillColor4: string;
    };
    [FourColorsSchemeNames.forest]: {
        fillColor1: string;
        fillColor2: string;
        fillColor3: string;
        fillColor4: string;
    };
    [FourColorsSchemeNames.twilight]: {
        fillColor1: string;
        fillColor2: string;
        fillColor3: string;
        fillColor4: string;
    };
    [FourColorsSchemeNames.dawn]: {
        fillColor1: string;
        fillColor2: string;
        fillColor3: string;
        fillColor4: string;
    };
    [FourColorsSchemeNames.dusk]: {
        fillColor1: string;
        fillColor2: string;
        fillColor3: string;
        fillColor4: string;
    };
    [FourColorsSchemeNames.midday]: {
        fillColor1: string;
        fillColor2: string;
        fillColor3: string;
        fillColor4: string;
    };
    [FourColorsSchemeNames.midnight]: {
        fillColor1: string;
        fillColor2: string;
        fillColor3: string;
        fillColor4: string;
    };
    [FourColorsSchemeNames.sunrise]: {
        fillColor1: string;
        fillColor2: string;
        fillColor3: string;
        fillColor4: string;
    };
    [FourColorsSchemeNames.rainbow]: {
        fillColor1: string;
        fillColor2: string;
        fillColor3: string;
        fillColor4: string;
    };
};
declare const HairballPreset: {
    sunset: string;
    ocean: string;
    forest: string;
    twilight: string;
    dawn: string;
    dusk: string;
    midday: string;
    midnight: string;
    sunrise: string;
    rainbow: string;
};
type HairballPresetType = keyof typeof HairballPreset;
declare const HAIRBALL_DEFAULT_COLOR: {
    fillColor1: string;
    fillColor2: string;
    fillColor3: string;
    fillColor4: string;
};
interface HairballProps extends PrimaryProps {
    colors?: HairballCustomColor;
    preset?: HairballPresetType | string;
    backgroundColor?: string;
    speed?: number;
    width?: number;
    height?: number;
}
declare const Hairball: FC<HairballProps>;

interface CustomColor {
    fillColor1?: string;
    fillColor2?: string;
    fillColor3?: string;
    fillColor4?: string;
}
declare const WhirlPreset: {
    sunset: string;
    ocean: string;
    forest: string;
    twilight: string;
    dawn: string;
    dusk: string;
    midday: string;
    midnight: string;
    sunrise: string;
    rainbow: string;
};
declare const WhirlPresetColors: {
    [FourColorsSchemeNames.sunset]: {
        fillColor1: string;
        fillColor2: string;
        fillColor3: string;
        fillColor4: string;
    };
    [FourColorsSchemeNames.ocean]: {
        fillColor1: string;
        fillColor2: string;
        fillColor3: string;
        fillColor4: string;
    };
    [FourColorsSchemeNames.forest]: {
        fillColor1: string;
        fillColor2: string;
        fillColor3: string;
        fillColor4: string;
    };
    [FourColorsSchemeNames.twilight]: {
        fillColor1: string;
        fillColor2: string;
        fillColor3: string;
        fillColor4: string;
    };
    [FourColorsSchemeNames.dawn]: {
        fillColor1: string;
        fillColor2: string;
        fillColor3: string;
        fillColor4: string;
    };
    [FourColorsSchemeNames.
        dusk]: {
        fillColor1: string;
        fillColor2: string;
        fillColor3: string;
        fillColor4: string;
    };
    [FourColorsSchemeNames.midday]: {
        fillColor1: string;
        fillColor2: string;
        fillColor3: string;
        fillColor4: string;
    };
    [FourColorsSchemeNames.midnight]: {
        fillColor1: string;
        fillColor2: string;
        fillColor3: string;
        fillColor4: string;
    };
    [FourColorsSchemeNames.sunrise]: {
        fillColor1: string;
        fillColor2: string;
        fillColor3: string;
        fillColor4: string;
    };
    [FourColorsSchemeNames.
        rainbow]: {
        fillColor1: string;
        fillColor2: string;
        fillColor3: string;
        fillColor4: string;
    };
};
interface WhirlProps extends PrimaryProps {
    background?: string;
    colors?: CustomColor;
    preset?: keyof typeof FourColorsSchemeNames;
    speedInSecond?: number;
}
declare const Whirl: FunctionComponent<WhirlProps>;

export { type CustomColor, HAIRBALL_DEFAULT_COLOR, Hairball, type HairballCustomColor, HairballPreset, HairballPresetColors, type HairballPresetType, type HairballProps, Whirl, WhirlPreset, WhirlPresetColors, type WhirlProps };
